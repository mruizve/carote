#!/usr/bin/env python
PACKAGE = "carote"

from dynamic_reconfigure.parameter_generator_catkin import *

gen=ParameterGenerator()

calibration=gen.add_group("calibration")
calibration.add("calibrate",int_t,0,"calibration activation flag",0,0,1)
calibration.add("H_low", int_t,0,"H lower bound",150,0,180)
calibration.add("H_high",int_t,0,"H upper bound",180,0,180)
calibration.add("S_low", int_t,0,"S lower bound",110,0,255)
calibration.add("S_high",int_t,0,"S upper bound",255,0,255)
calibration.add("V_low", int_t,0,"V lower bound",130,0,255)
calibration.add("V_high",int_t,0,"V upper bound",255,0,255)
calibration.add("depth_low", double_t,0,"minimum depth",0.3,0.0,2.55)
calibration.add("depth_high",double_t,0,"maximum depth",1.3,0.0,2.55)
calibration.add("contour_threshold",int_t,0,"contours threshold",30,5,300)
calibration.add("morph_open",int_t,0,"kernel size for morphological opening",3,3,9)
calibration.add("morph_close",int_t,0,"kernel size for morphological closing",7,3,9)

filtering=gen.add_group("output filtering")
filtering.add("position_order",int_t,0,"position filter order",3,1,60)
filtering.add("velocity_order",int_t,0,"velocity filter order",4,3,6)

topics=gen.add_group("IO and frame topics")
topics.add("input_sensor",str_t,0,"sensor name","/camera")
topics.add("input_frame",str_t,0,"reference frame for input data","/camera_depth_optical_frame")
topics.add("input_cloud",str_t,0,"input point cloud (relative to sensor)","/depth_registered/points")
topics.add("output_position",str_t,0,"target's position","/position")
topics.add("output_velocity",str_t,0,"target's velocity","/velocity")
topics.add("output_image",str_t,0,"segmented target for calibration","/image")

exit(gen.generate(PACKAGE, "parameters", "Target"))
